AWSTemplateFormatVersion: '2010-09-09'
Description: root stack for parity in ECS
Parameters:

  S3TemplatesPath:
    Type: String

  # VPC

  VpcCIDR:
    Description: IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.10.0/24

  PublicSubnet2CIDR:
    Description: IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.11.0/24

  PrivateSubnet1CIDR:
    Description: IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.20.0/24

  PrivateSubnet2CIDR:
    Description: IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.21.0/24

  # ECS

  # ECSAMI:
  #   Description: AMI id
  #   Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
  #   Default: /aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id

  SyncInstanceType:
    Type: String
    Description: Instance to sync the chain with for the first time
    Default: c5.large # 3714 actual memory
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
    ConstraintDescription: Please choose a valid instance type.
  PostSyncInstanceType:
    Type: String
    Description: Instance to use after first sync
    Default: t2.medium
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
    ConstraintDescription: Please choose a valid instance type.
  ChainSnapshotId:
    Type: String
    Description: EBS Snapshot from which to initiate the chain data
    Default: ""
  DNSName:
    Type: String
    Description: DNS name to register too
  KeyName:
    Type: String
    Description: SSH Key name to access the machine
    Default: ""
  ParityClientRepositoryName:
    Type: String
    Description: Name of ECR repository to use
    Default: parity
    AllowedValues:
      - parity
  DesiredTaskCount:
    Type: Number
    Default: 1
  SyncVolumeType:
    Type: String
    Default: io1
    AllowedValues:
      - io1
      - gp2
      - st1
      - sc1
  PostSyncVolumeType:
    Type: String
    Default: gp2
    AllowedValues:
      - io1
      - gp2
      - st1
      - sc1
  SyncIops:
    Type: Number
    Default: 2500
  PostSyncIops:
    Type: Number
    Default: 300
  VolumeSize:
    Type: Number
    Default: 100
  SyncToBlock:
    Type: Number
    Description: which block number to sync to on the first sync
    MinValue: 1
  AlertsEmail:
    Description: get alerted when the first sync is complete and snaphotted
    Type: String
    AllowedPattern: "^[\\x20-\\x45]?[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$"
    ConstraintDescription: 'must be a valid email address'

  NetworkName:
    Type: String
    Description: The Ethereum network
    Default: mainnet
    AllowedValues:
      # parity doesn't support morden, rinkeby,
      - mainnet
      # - morden
      - ropsten
      # - rinkeby
      - kovan
    ConstraintDescription: invalid network name, specify mainnet, ropsten, or kovan

  # InstanceTenancy:
  #   Type: String
  #   Default: default
  #   AllowedValues:
  #     - default
  #     - dedicated

  NginxRepositoryName:
    Type: String
    Description: Name of ECR repository to use
    Default: nginx-proxy
    AllowedValues:
      - nginx-proxy

  # BEGIN ethereum indexer params

  EthIndexerRepositoryName:
    Type: String
    Description: Name of ECR repository to use
    Default: eth-indexer
    AllowedValues:
      - eth-indexer

  IndexerStartBlock:
    Type: Number
    Description: which block number to start indexing addrs -> txs from
    MinValue: 0
    Default: 0

  IndexerConfirmationHeight:
    Type: Number
    Description: height at which indexer considers a block confirmed
    MinValue: 1
    Default: 15

  IndexerAPIPath:
    Type: String
    Default: /eth

Conditions:
  Syncing: !Equals [ !Ref ChainSnapshotId, ""]
  SSHAccess: !Not [!Equals [ !Ref KeyName, ""]]

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/vpc.yml
      Parameters:
        Namespace: !Ref AWS::StackName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
        EnableSSHAccess: !If
          - SSHAccess
          - "true"
          - "false"

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/security-groups.yml
      Parameters:
        Namespace: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        KeyName: !Ref KeyName

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/load-balancers.yml
      Parameters:
        Namespace: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/ecs.yml
      Parameters:
        Namespace: !Ref AWS::StackName
        # ECSAMI: !Ref ECSAMI
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        InstanceType: !If
          - Syncing
          - !Ref SyncInstanceType
          - !Ref PostSyncInstanceType
        SnapshotId: !If
          - Syncing
          - !Ref "AWS::NoValue"
          - !Ref ChainSnapshotId
        VolumeSize: !Ref VolumeSize
        VolumeType: !If
          - Syncing
          - !Ref SyncVolumeType
          - !Ref PostSyncVolumeType
        Iops: !If
          - Syncing
          - !Ref SyncIops
          - !Ref PostSyncIops
        KeyName: !Ref KeyName
        NetworkName: !Ref NetworkName
        SyncToBlock: !Ref SyncToBlock
        AlertsEmail: !Ref AlertsEmail
        # InstanceTenancy: !Ref InstanceTenancy

  Ethereum:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPC
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/ethereum.yml
      Parameters:
        Namespace: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredTaskCount: !Ref DesiredTaskCount
        # AvailabilityZones: !GetAtt VPC.Outputs.AvailabilityZones
        ALBListener: !GetAtt ALB.Outputs.Listener
        ParityClientRepositoryName: !Ref ParityClientRepositoryName
        NginxRepositoryName: !Ref NginxRepositoryName
        NetworkName: !Ref NetworkName
        EthIndexerRepositoryName: !Ref EthIndexerRepositoryName
        IndexerStartBlock: !Ref IndexerStartBlock
        IndexerConfirmationHeight: !Ref IndexerConfirmationHeight
        Path: !Ref IndexerAPIPath

  # DNS:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: Ethereum
  #   Properties:
  #     TemplateURL: !Sub https://s3.amazonaws.com/${S3TemplatesPath}/dns.yml
  #     Parameters:
  #       Namespace: !Ref Namespace
  #       DNSName: !Ref DNSName
  #       ECSCluster: !Ref ECSCluster
  #       ChainSnapshotId: !Ref ChainSnapshotId

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !GetAtt VPC.Outputs.VPC

  EthDNSName:
    Description: indexer DNS name
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, !Ref IndexerAPIPath]]

  ECSCluster:
    Description: ECS cluster
    Value: !GetAtt ECS.Outputs.Cluster

  EthECSService:
    Value: !GetAtt Ethereum.Outputs.ECSService

  # JsonRpcDNSName:
  #   Description: indexer DNS name
  #   Value: !GetAtt Ethereum.Outputs.JsonRpcDNSName
